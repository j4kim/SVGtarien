
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AA72A4B27F4EA33652BC68B3D26FA3D3'
    
_lr_action_items = {'MOVE':([0,1,2,3,4,],[1,-4,-5,-3,1,]),'NUMBER':([0,1,2,3,4,],[2,-4,-5,-3,2,]),'POS':([0,1,2,3,4,],[3,-4,-5,-3,3,]),'$end':([1,2,3,4,5,6,],[-4,-5,-3,-1,0,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,4,],[4,4,]),'programme':([0,4,],[5,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',7),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parser.py',11),
  ('statement -> POS','statement',1,'p_statement','parser.py',15),
  ('statement -> MOVE','statement',1,'p_statement','parser.py',16),
  ('statement -> NUMBER','statement',1,'p_expression_num_or_var','parser.py',20),
]
